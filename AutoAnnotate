{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"colab":{"provenance":[]},"kaggle":{"accelerator":"none","dataSources":[],"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!sudo apt-get update\n!sudo apt-get install tesseract-ocr poppler-utils\n!pip install pytesseract pdf2image Pillow opencv-python-headless numpy pycocotools","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tt4Dn520bFol","outputId":"63668c14-6080-4e83-c6e9-aafb77e97432"},"outputs":[{"output_type":"stream","name":"stdout","text":["\r0% [Working]\r            \rGet:1 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease [3,626 B]\n","\r0% [Connecting to archive.ubuntu.com (185.125.190.82)] [Waiting for headers] [1\r0% [Connecting to archive.ubuntu.com (185.125.190.82)] [Waiting for headers] [W\r                                                                               \rHit:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease\n","\r0% [Connecting to archive.ubuntu.com (185.125.190.82)] [Waiting for headers] [W\r                                                                               \rGet:3 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]\n","Get:4 https://r2u.stat.illinois.edu/ubuntu jammy InRelease [6,555 B]\n","Hit:5 http://archive.ubuntu.com/ubuntu jammy InRelease\n","Get:6 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]\n","Hit:7 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease\n","Hit:8 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease\n","Hit:9 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease\n","Get:10 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]\n","Get:11 https://r2u.stat.illinois.edu/ubuntu jammy/main all Packages [8,567 kB]\n","Get:12 https://r2u.stat.illinois.edu/ubuntu jammy/main amd64 Packages [2,631 kB]\n","Get:13 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [1,226 kB]\n","Get:14 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [3,448 kB]\n","Get:15 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [2,517 kB]\n","Get:16 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,517 kB]\n","Get:17 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2,830 kB]\n","Get:18 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [3,614 kB]\n","Get:19 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [33.8 kB]\n","Get:20 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [81.4 kB]\n","Fetched 26.9 MB in 9s (3,017 kB/s)\n","Reading package lists... Done\n","W: Skipping acquire of configured file 'main/source/Sources' as repository 'https://r2u.stat.illinois.edu/ubuntu jammy InRelease' does not seem to provide it (sources.list entry misspelt?)\n","Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following additional packages will be installed:\n","  tesseract-ocr-eng tesseract-ocr-osd\n","The following NEW packages will be installed:\n","  poppler-utils tesseract-ocr tesseract-ocr-eng tesseract-ocr-osd\n","0 upgraded, 4 newly installed, 0 to remove and 50 not upgraded.\n","Need to get 5,002 kB of archives.\n","After this operation, 16.3 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 poppler-utils amd64 22.02.0-2ubuntu0.5 [186 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr-eng all 1:4.00~git30-7274cfa-1.1 [1,591 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr-osd all 1:4.00~git30-7274cfa-1.1 [2,990 kB]\n","Get:4 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr amd64 4.1.1-2.1build1 [236 kB]\n","Fetched 5,002 kB in 1s (4,269 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 4.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package poppler-utils.\n","(Reading database ... 123634 files and directories currently installed.)\n","Preparing to unpack .../poppler-utils_22.02.0-2ubuntu0.5_amd64.deb ...\n","Unpacking poppler-utils (22.02.0-2ubuntu0.5) ...\n","Selecting previously unselected package tesseract-ocr-eng.\n","Preparing to unpack .../tesseract-ocr-eng_1%3a4.00~git30-7274cfa-1.1_all.deb ...\n","Unpacking tesseract-ocr-eng (1:4.00~git30-7274cfa-1.1) ...\n","Selecting previously unselected package tesseract-ocr-osd.\n","Preparing to unpack .../tesseract-ocr-osd_1%3a4.00~git30-7274cfa-1.1_all.deb ...\n","Unpacking tesseract-ocr-osd (1:4.00~git30-7274cfa-1.1) ...\n","Selecting previously unselected package tesseract-ocr.\n","Preparing to unpack .../tesseract-ocr_4.1.1-2.1build1_amd64.deb ...\n","Unpacking tesseract-ocr (4.1.1-2.1build1) ...\n","Setting up tesseract-ocr-eng (1:4.00~git30-7274cfa-1.1) ...\n","Setting up tesseract-ocr-osd (1:4.00~git30-7274cfa-1.1) ...\n","Setting up poppler-utils (22.02.0-2ubuntu0.5) ...\n","Setting up tesseract-ocr (4.1.1-2.1build1) ...\n","Processing triggers for man-db (2.10.2-1) ...\n","Collecting pytesseract\n","  Downloading pytesseract-0.3.13-py3-none-any.whl.metadata (11 kB)\n","Collecting pdf2image\n","  Downloading pdf2image-1.17.0-py3-none-any.whl.metadata (6.2 kB)\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.10/dist-packages (11.0.0)\n","Requirement already satisfied: opencv-python-headless in /usr/local/lib/python3.10/dist-packages (4.10.0.84)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.26.4)\n","Requirement already satisfied: pycocotools in /usr/local/lib/python3.10/dist-packages (2.0.8)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from pytesseract) (24.2)\n","Requirement already satisfied: matplotlib>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from pycocotools) (3.8.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.1.0->pycocotools) (1.3.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.1.0->pycocotools) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.1.0->pycocotools) (4.55.3)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.1.0->pycocotools) (1.4.7)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.1.0->pycocotools) (3.2.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib>=2.1.0->pycocotools) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib>=2.1.0->pycocotools) (1.17.0)\n","Downloading pytesseract-0.3.13-py3-none-any.whl (14 kB)\n","Downloading pdf2image-1.17.0-py3-none-any.whl (11 kB)\n","Installing collected packages: pytesseract, pdf2image\n","Successfully installed pdf2image-1.17.0 pytesseract-0.3.13\n"]}],"execution_count":1},{"cell_type":"code","source":"!pip install pytesseract tox","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pf8p2qm3KqHZ","outputId":"18f85692-1b42-496c-d4a2-a564a8387709"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pytesseract in /usr/local/lib/python3.10/dist-packages (0.3.13)\n","Requirement already satisfied: tox in /usr/local/lib/python3.10/dist-packages (4.23.2)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from pytesseract) (24.2)\n","Requirement already satisfied: Pillow>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from pytesseract) (11.0.0)\n","Requirement already satisfied: cachetools>=5.5 in /usr/local/lib/python3.10/dist-packages (from tox) (5.5.0)\n","Requirement already satisfied: chardet>=5.2 in /usr/local/lib/python3.10/dist-packages (from tox) (5.2.0)\n","Requirement already satisfied: colorama>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from tox) (0.4.6)\n","Requirement already satisfied: filelock>=3.16.1 in /usr/local/lib/python3.10/dist-packages (from tox) (3.16.1)\n","Requirement already satisfied: platformdirs>=4.3.6 in /usr/local/lib/python3.10/dist-packages (from tox) (4.3.6)\n","Requirement already satisfied: pluggy>=1.5 in /usr/local/lib/python3.10/dist-packages (from tox) (1.5.0)\n","Requirement already satisfied: pyproject-api>=1.8 in /usr/local/lib/python3.10/dist-packages (from tox) (1.8.0)\n","Requirement already satisfied: tomli>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from tox) (2.2.1)\n","Requirement already satisfied: typing-extensions>=4.12.2 in /usr/local/lib/python3.10/dist-packages (from tox) (4.12.2)\n","Requirement already satisfied: virtualenv>=20.26.6 in /usr/local/lib/python3.10/dist-packages (from tox) (20.28.0)\n","Requirement already satisfied: distlib<1,>=0.3.7 in /usr/local/lib/python3.10/dist-packages (from virtualenv>=20.26.6->tox) (0.3.9)\n"]}],"execution_count":null},{"cell_type":"code","source":"import json\nimport os","metadata":{"id":"oZzR2q6xKWmf"},"outputs":[],"execution_count":2},{"cell_type":"code","source":"os.environ['PATH'] += ':/usr/bin'","metadata":{"id":"5ToZ6QBgbN2q"},"outputs":[],"execution_count":3},{"cell_type":"code","source":"import pytesseract\nprint(pytesseract.get_tesseract_version())","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"57HL1xYgbQ8l","outputId":"3cef9181-bea1-4833-c438-a378bb3678dc"},"outputs":[{"output_type":"stream","name":"stdout","text":["4.1.1\n"]}],"execution_count":4},{"cell_type":"code","source":"categories = [\n    {'id': 1, 'name': 'Seller_Name'},\n    {'id': 2, 'name': 'Buyer_Name'},\n    {'id': 3, 'name': 'NTN_Number'},\n    # Add more categories as needed\n]\n\ncoco_annotations = {\n    'images': [],\n    'annotations': [],\n    'categories': categories\n}","metadata":{"id":"0WQmKT9Vm4FU"},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from PIL import Image\n\nimage = Image.open('/content/invoice_15001_page_1.jpeg')\n\n# Extract text\ntext = pytesseract.image_to_string(image)\nprint(text)","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2pv4IPWOaGJ3","outputId":"8d8749bc-ba6a-4ce4-b29e-1b9dad39973c"},"outputs":[{"output_type":"stream","name":"stdout","text":["@)\n","\n","GENERAL ORDER SUPPLIERS\n","\n","SALES TAX INVOICE\n","\n","Serial No.: 995721\n","\n","Supplier's Details:\n","\n","Supplier's Name: BEST DAIRY FEEDS\n","\n","Address: Medical Director Habib Medical Center Bus/3 Block-4\n","S.T. Reg. No.: 1070-77-8761-1452-23\n","\n","NTN: 4220172648109\n","\n","Buyer's Details:\n","\n","Buyer's Name: MUHAMMAD SHAFIQUE KHAN\n","\n","Address: H A-287 Jahangir Road 1 Near Jahangir Road Sindh\n","S.T. Reg. No.: 2811-2857-8761-413-23\n","\n","NTN: 3169169-2\n","\n","9.9. Khan “/eadens reso)\n","\n","Dealers In: HARDWARE, TEXTILE & PACKING MATERIAL\n","\n","Lahore\n","Coll\n","\n","Date: 13-01-2021\n","\n","Hoad Office; 5, Qaddafi\n","Markel, Brandreth Road\n","\n","Tol, 57652650\n","(900-1420816\n","0921-4300942\n","\n","Amount Amount\n","SR. NO. | Description Quantity | Rate Excluding ST Sales Tax Including ST\n","\n","3,936.00\n","480.00\n","\n","2,982.00\n","5,185.00\n","\n","12,583.00\n","\n"," \n","\n"," \n","\n","Sales Tax: 2,264.94\n","Net Tax Inclusive Value: 14,847.94\n","\n","Signature:\n","Name and Designation:\n","\n"," \n","\n","708.48\n","86.40\n","\n","536.76\n","933.30\n","\n","2,264.94\n","\n","14,847.94\n","\f\n"]}],"execution_count":null},{"cell_type":"code","source":"from pdf2image import convert_from_path\n\ndef convert_pdf_to_images(pdf_path, output_folder):\n    images = convert_from_path(pdf_path)\n    for idx, img in enumerate(images):\n        img.save(os.path.join(output_folder, f'{os.path.basename(pdf_path)}_page_{idx+1}.jpg'), 'JPEG')","metadata":{"id":"zw6kKTyYnOW_"},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pytesseract\nfrom PIL import Image\n\ndef process_image(image_path):\n    img = Image.open(image_path)\n    width, height = img.size\n    image_id = len(coco_annotations['images']) + 1\n    coco_annotations['images'].append({\n        'id': image_id,\n        'file_name': os.path.basename(image_path),\n        'width': width,\n        'height': height\n    })\n    data = pytesseract.image_to_data(img, output_type=pytesseract.Output.DICT)\n\n    # Example: Detect Seller's Name\n    for i in range(len(data['text'])):\n        text = data['text'][i].strip()\n        if text == 'Seller\\'s Name:':\n            seller_name_text = data['text'][i+1]\n            x = data['left'][i+1]\n            y = data['top'][i+1]\n            w = data['width'][i+1]\n            h = data['height'][i+1]\n            coco_annotations['annotations'].append({\n                'id': len(coco_annotations['annotations']) + 1,\n                'image_id': image_id,\n                'category_id': 1,  # Seller_Name\n                'bbox': [x, y, w, h],\n                'area': w * h,\n                'iscrowd': 0\n            })\n        # Add similar logic for other fields","metadata":{"id":"iveTj8KwnEwK"},"outputs":[],"execution_count":null},{"cell_type":"code","source":"data_folder = './'\noutput_folder = './'\nos.makedirs(output_folder, exist_ok=True)\n\nfor filename in os.listdir(data_folder):\n    file_path = os.path.join(data_folder, filename)\n    if filename.endswith('.pdf'):\n        convert_pdf_to_images(file_path, output_folder)\n    elif filename.endswith(('.jpg', '.jpeg', '.png')):\n        process_image(file_path)","metadata":{"id":"bh29N9PUk8YP"},"outputs":[],"execution_count":null},{"cell_type":"code","source":"with open(os.path.join(output_folder, 'annotations.json'), 'w') as f:\n    json.dump(coco_annotations, f)","metadata":{"id":"Da8I6GHXnKMN"},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"\n\n---\n\n","metadata":{"id":"bZ7crHi8cSdw"}},{"cell_type":"code","source":"import os\nimport cv2\nimport pytesseract\nimport json\nimport numpy as np\n\n# Set Tesseract executable path if required\n# pytesseract.pytesseract.tesseract_cmd = r'C:\\Program Files\\Tesseract-OCR\\tesseract.exe'\n\ndef extract_text_with_boxes(image_path):\n    \"\"\"\n    Extracts text and bounding boxes from an image using Tesseract OCR.\n    \"\"\"\n    image = cv2.imread(image_path)\n    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\n    # OCR with bounding boxes\n    data = pytesseract.image_to_data(gray, output_type=pytesseract.Output.DICT)\n    return data, image\n\ndef match_labels_and_create_annotations(data, labels):\n    \"\"\"\n    Matches extracted text with labels and creates annotations.\n    \"\"\"\n    annotations = []\n    for i, text in enumerate(data['text']):\n        text = text.strip()\n        if text:\n            for label in labels:\n                if label in text:\n                    bbox = [data['left'][i], data['top'][i], data['width'][i], data['height'][i]]\n                    annotations.append({\"label\": label, \"text\": text, \"bbox\": bbox})\n    return annotations\n\ndef convert_to_coco_format(annotations, image_id, image_width, image_height):\n    \"\"\"\n    Converts annotations to COCO format.\n    \"\"\"\n    coco_annotations = []\n    for ann_id, ann in enumerate(annotations):\n        x, y, width, height = ann['bbox']\n        coco_annotations.append({\n            \"id\": ann_id,\n            \"image_id\": image_id,\n            \"category_id\": 1,  # Assign 1 for all labels initially\n            \"bbox\": [x, y, width, height],\n            \"area\": width * height,\n            \"segmentation\": [],\n            \"iscrowd\": 0\n        })\n    return coco_annotations\n\ndef annotate_images_in_folder(folder_path, labels, output_json_path):\n    \"\"\"\n    Annotates images in a folder and saves COCO-format annotations.\n    \"\"\"\n    coco_dataset = {\n        \"images\": [],\n        \"annotations\": [],\n        \"categories\": [{\"id\": 1, \"name\": \"text\"}]  # Simplify to a single category\n    }\n\n    image_id = 1\n    for filename in os.listdir(folder_path):\n        if filename.lower().endswith(('png', 'jpg', 'jpeg')):\n            image_path = os.path.join(folder_path, filename)\n            data, image = extract_text_with_boxes(image_path)\n\n            # Annotate labels\n            annotations = match_labels_and_create_annotations(data, labels)\n\n            # Image dimensions\n            height, width, _ = image.shape\n\n            # Append to COCO dataset\n            coco_dataset[\"images\"].append({\n                \"id\": image_id,\n                \"file_name\": filename,\n                \"width\": width,\n                \"height\": height\n            })\n            coco_dataset[\"annotations\"].extend(\n                convert_to_coco_format(annotations, image_id, width, height)\n            )\n            image_id += 1\n\n    # Save to JSON\n    with open(output_json_path, 'w') as f:\n        json.dump(coco_dataset, f, indent=4)\n\n# Folder Path and Labels\nfolder_path = \"./\"\noutput_json_path = \"annotations_coco.json\"\nlabels = [\"Supplier's Name\", \"Buyer's Name\", \"NTN\", \"Sales Tax\", \"Total\"]  # Extend with other labels\n\n# Annotate and save\nannotate_images_in_folder(folder_path, labels, output_json_path)\nprint(f\"Annotations saved to {output_json_path}\")\n","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2NsHFgU6cTIx","outputId":"291f6b08-cedc-423d-f502-268c2dba518d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Annotations saved to annotations_coco.json\n"]}],"execution_count":5}]}